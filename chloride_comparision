{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled3.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyMpMmFhpq8KtWh5vGkIFbx8",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/prakanshurockss/classifier-model_intern_Task/blob/main/chloride_comparision\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nohzJJqPRqYk"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n"
      ],
      "execution_count": 89,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AwL85FPURtgm"
      },
      "source": [
        "features=pd.read_csv('training_data.csv')\n",
        "features_test=pd.read_csv('test_data.csv')"
      ],
      "execution_count": 90,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jEjyRgQJSVRm",
        "outputId": "7f420c2f-4d82-45b2-a492-186178589f25"
      },
      "source": [
        "print(features)"
      ],
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "      patient_id standard_lab_parameter_name  ...  age_group gender\n",
            "0              0                         WBC  ...        old   male\n",
            "1              1                          T4  ...        old   male\n",
            "2              2                         WBC  ...      adult   male\n",
            "3              3                          T4  ...      adult   male\n",
            "4              4                         WBC  ...      adult   male\n",
            "...          ...                         ...  ...        ...    ...\n",
            "9995        9995                         WBC  ...      adult   male\n",
            "9996        9996                         WBC  ...      adult   male\n",
            "9997        9997                          T4  ...        old   male\n",
            "9998        9998                         WBC  ...        old   male\n",
            "9999        9999                          T4  ...      adult   male\n",
            "\n",
            "[10000 rows x 9 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fy1o4IMcYCB8"
      },
      "source": [
        "features=features.drop(['unit','patient_id','created_at','reference_high', 'reference_low','gender'],axis=1)\n"
      ],
      "execution_count": 92,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "chmVikUTd-oz"
      },
      "source": [
        "features_test=features_test.drop(['unit','patient_id','created_at','reference_high', 'reference_low','Unnamed: 0'],axis=1)"
      ],
      "execution_count": 94,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "id": "cz7floe1Xpwn",
        "outputId": "f55425c3-5987-4cf0-93a4-dcafcc9f4d52"
      },
      "source": [
        "features.head(15)"
      ],
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>standard_lab_parameter_name</th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>age_group</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>WBC</td>\n",
              "      <td>579.00</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>T4</td>\n",
              "      <td>5.00</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>WBC</td>\n",
              "      <td>6.81</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>T4</td>\n",
              "      <td>5.70</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>WBC</td>\n",
              "      <td>4.64</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>T4</td>\n",
              "      <td>8.50</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Sodium</td>\n",
              "      <td>135.40</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>105.30</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>WBC</td>\n",
              "      <td>7.20</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>WBC</td>\n",
              "      <td>6.41</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>T4</td>\n",
              "      <td>7.40</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Sodium</td>\n",
              "      <td>133.00</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.00</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>T4</td>\n",
              "      <td>4.40</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>WBC</td>\n",
              "      <td>920000.00</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   standard_lab_parameter_name  parameter_value age_group\n",
              "0                          WBC           579.00       old\n",
              "1                           T4             5.00       old\n",
              "2                          WBC             6.81     adult\n",
              "3                           T4             5.70     adult\n",
              "4                          WBC             4.64     adult\n",
              "5                           T4             8.50     adult\n",
              "6                       Sodium           135.40     adult\n",
              "7                     Chloride           105.30     adult\n",
              "8                          WBC             7.20     adult\n",
              "9                          WBC             6.41     adult\n",
              "10                          T4             7.40     adult\n",
              "11                      Sodium           133.00     adult\n",
              "12                    Chloride           107.00     adult\n",
              "13                          T4             4.40     adult\n",
              "14                         WBC        920000.00     adult"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "H8e5OonbZhBI"
      },
      "source": [
        "features=features[features.standard_lab_parameter_name.str.contains('Chloride',case=False)]\n",
        "features_test=features_test[features_test.standard_lab_parameter_name.str.contains('Chloride',case=False)]"
      ],
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "id": "8ZOWHihcepkH",
        "outputId": "bcc78e21-f0ae-4f55-9f6c-c93189e7d86f"
      },
      "source": [
        "features_test.head(15)"
      ],
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>standard_lab_parameter_name</th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>age_group</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>108.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>108.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>96.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>100.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>69</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>106.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>102.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>115</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    standard_lab_parameter_name  parameter_value age_group\n",
              "11                     Chloride             98.0       old\n",
              "20                     Chloride            108.0       old\n",
              "25                     Chloride            108.0     adult\n",
              "30                     Chloride             99.0       old\n",
              "36                     Chloride             98.0       old\n",
              "45                     Chloride             96.0     adult\n",
              "52                     Chloride            100.0     adult\n",
              "59                     Chloride            103.0       old\n",
              "65                     Chloride            107.0     adult\n",
              "69                     Chloride             99.0       old\n",
              "75                     Chloride            106.0     adult\n",
              "89                     Chloride             99.0     adult\n",
              "95                     Chloride            101.0     adult\n",
              "100                    Chloride            102.0     adult\n",
              "115                    Chloride            107.0       old"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "id": "iyZjARIJdpCw",
        "outputId": "6c479eab-1f57-4ec7-a47f-41ff890f6ae7"
      },
      "source": [
        "features.head(15)"
      ],
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>standard_lab_parameter_name</th>\n",
              "      <th>parameter_value</th>\n",
              "      <th>age_group</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>105.3</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>107.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>106.5</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>98.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.9</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>104.3</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>104.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>104.5</td>\n",
              "      <td>old</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>102.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>107</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>99.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>119</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>103.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>130</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>105.0</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>139</th>\n",
              "      <td>Chloride</td>\n",
              "      <td>101.2</td>\n",
              "      <td>adult</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    standard_lab_parameter_name  parameter_value age_group\n",
              "7                      Chloride            105.3     adult\n",
              "12                     Chloride            107.0     adult\n",
              "23                     Chloride            106.5       old\n",
              "30                     Chloride             98.0     adult\n",
              "46                     Chloride            101.9       old\n",
              "50                     Chloride            104.3     adult\n",
              "71                     Chloride            104.0     adult\n",
              "82                     Chloride            101.0     adult\n",
              "89                     Chloride            103.0     adult\n",
              "93                     Chloride            104.5       old\n",
              "96                     Chloride            102.0     adult\n",
              "107                    Chloride             99.0     adult\n",
              "119                    Chloride            103.0     adult\n",
              "130                    Chloride            105.0     adult\n",
              "139                    Chloride            101.2     adult"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "mzI9KkcKb_7J",
        "outputId": "d751e86c-38c7-4cec-b8dd-aebc873d92d1"
      },
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        " \n",
        "# creating the bar plot\n",
        "plt.bar(features.age_group, features.parameter_value, color ='maroon',\n",
        "        width = 0.4)\n",
        " \n",
        "plt.xlabel(\"age_group\")\n",
        "plt.ylabel(\"parameter_value\")\n",
        "plt.title(\"chloride comparision of train_data\")\n",
        "plt.show()"
      ],
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "ib4_cTXJfF2J",
        "outputId": "db93f2b2-ca0e-4b55-ea9b-a8b6f43c11b1"
      },
      "source": [
        "fig = plt.figure(figsize = (10, 5))\n",
        " \n",
        "# creating the bar plot\n",
        "plt.bar(features_test.age_group, features_test.parameter_value, color ='maroon',\n",
        "        width = 0.4)\n",
        " \n",
        "plt.xlabel(\"age_group\")\n",
        "plt.ylabel(\"parameter_value\")\n",
        "plt.title(\"chloride comparision of test_data\")\n",
        "plt.show()"
      ],
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}